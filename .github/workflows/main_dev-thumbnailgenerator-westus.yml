name: Build and deploy dotnet core app to Azure Function App - dev-thumbnailgenerator-westus

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PROJECT_PATH: 'ImageShare.Functions/' # üìÅ Directory path
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'ImageShare.Functions/output'
  DOTNET_VERSION: '8.0.x'

jobs:
  build-and-deploy:
    runs-on: windows-latest
    permissions:
      id-token: write
      contents: read

    steps:
      # Step 1: Checkout repository code
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4

      # Step 2: Setup .NET SDK
      - name: Setup DotNet Environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      # Step 3: Build Azure Function App
      - name: 'Build Azure Function App'
        shell: pwsh
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PROJECT_PATH }}'
          
          # Build ONLY the Function App project file directly
          dotnet build './ImageShare.Functions.csproj' --configuration Release --output ./output

          popd
      
      # Step 4: Login to Azure
      - name: 'Login to Azure'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_23C60DC84FED4D1E81D6AFC0533495E9 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_667F4BEEDFDD44CCBB82F7A5FB3E3750 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_DD79C56BEF6E47A4A0E6957857B3ADB2 }}


      # Step 5: Deploy Azure Function App
      - name: 'Deploy Azure Function App'
        uses: Azure/functions-action@v1
        with:
          app-name: 'dev-thumbnailgenerator-westus'
          slot-name: 'Production'
          package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
